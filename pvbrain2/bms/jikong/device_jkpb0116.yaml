globals:    
  - id: ${bms_name}_battery_charging_energy_yesterday_global
    type: float
    restore_value: yes
    
  - id: ${bms_name}_battery_discharging_energy_yesterday_global
    type: float
    restore_value: yes

time:
  - platform: homeassistant #sntp
    id: !extend my_time
    on_time:
      - seconds: 59
        minutes: 59
        hours: 23
        then:  
          - globals.set:
              id: ${bms_name}_battery_charging_energy_yesterday_global
              value: !lambda return ( id(${bms_name}_battery_charging_energy_yesterday_global) =  float( id(${bms_name}_battery_charging_energy_today).state) ); 
                
          - globals.set:
              id: ${bms_name}_battery_discharging_energy_yesterday_global
              value: !lambda return ( id(${bms_name}_battery_discharging_energy_yesterday_global) =  float( id(${bms_name}_battery_discharging_energy_today).state) );

modbus_controller:
  - id: ${bms_name}_modbus_controller
    address: ${bms_modbus_address}
    modbus_id: ${bms_modbus_id}
    command_throttle: ${bms_modbus_throttle}
    setup_priority: -10
    update_interval: ${bms_update_interval}

binary_sensor:
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller
    name: ${name}_${bms_name}_charging
    address: 0x12C0
    register_type: holding
    lambda: |-
      return data[0] == 1;

  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller
    name: ${name}_${bms_name}_discharging
    address: 0x12C0
    register_type: holding
    lambda: |-
      return data[1] == 1;

  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller
    name: ${name}_${bms_name}_balancing
    address: 0x12A6
    register_type: holding
    lambda: |-
      return data[0] == 1;


sensor:
  # 0x1200    0    UINT16    2    R    CellVol0    mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller
    name: ${name}_${bms_name}_cell_voltage_1
    address: 0x1200
    register_type: holding
    value_type: U_WORD
    register_count: 32  # read up to CellVol31
    unit_of_measurement: "V"
    device_class: voltage
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  # 0x1202    2    UINT16    2    R    CellVol1    mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller
    name: ${name}_${bms_name}_cell_voltage_2
    address: 0x1202
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: "V"
    device_class: voltage
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  # 0x1204    4    UINT16    2    R    CellVol2    mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller
    name: ${name}_${bms_name}_cell_voltage_3
    address: 0x1204
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: "V"
    device_class: voltage
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  # 0x1206    6    UINT16    2    R    CellVol3    mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller
    name: ${name}_${bms_name}_cell_voltage_4
    address: 0x1206
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: "V"
    device_class: voltage
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  # 0x1208    8    UINT16    2    R    CellVol4    mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller
    name: ${name}_${bms_name}_cell_voltage_5
    address: 0x1208
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: "V"
    device_class: voltage
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  # 0x120A   10    UINT16    2    R    CellVol5    mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller
    name: ${name}_${bms_name}_cell_voltage_6
    address: 0x120A
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: "V"
    device_class: voltage
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  # 0x120C   12    UINT16    2    R    CellVol6    mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller
    name: ${name}_${bms_name}_cell_voltage_7
    address: 0x120C
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: "V"
    device_class: voltage
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  # 0x120E   14    UINT16    2    R    CellVol7    mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller
    name: ${name}_${bms_name}_cell_voltage_8
    address: 0x120E
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: "V"
    device_class: voltage
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  # 0x1210   16    UINT16    2    R    CellVol8    mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller
    name: ${name}_${bms_name}_cell_voltage_9
    address: 0x1210
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: "V"
    device_class: voltage
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  # 0x1212   18    UINT16    2    R    CellVol9    mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller
    name: ${name}_${bms_name}_cell_voltage_10
    address: 0x1212
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: "V"
    device_class: voltage
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  # 0x1214   20    UINT16    2    R    CellVol10   mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller
    name: ${name}_${bms_name}_cell_voltage_11
    address: 0x1214
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: "V"
    device_class: voltage
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  # 0x1216   22    UINT16    2    R    CellVol11   mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller
    name: ${name}_${bms_name}_cell_voltage_12
    address: 0x1216
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: "V"
    device_class: voltage
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  # 0x1218   24    UINT16    2    R    CellVol12   mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller
    name: ${name}_${bms_name}_cell_voltage_13
    address: 0x1218
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: "V"
    device_class: voltage
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  # 0x121A   26    UINT16    2    R    CellVol13   mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller
    name: ${name}_${bms_name}_cell_voltage_14
    address: 0x121A
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: "V"
    device_class: voltage
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  # 0x121C   28    UINT16    2    R    CellVol14   mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller
    name: ${name}_${bms_name}_cell_voltage_15
    address: 0x121C
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: "V"
    device_class: voltage
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  # 0x121E   30    UINT16    2    R    CellVol15   mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller
    name: ${name}_${bms_name}_cell_voltage_16
    address: 0x121E
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: "V"
    device_class: voltage
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller
    name: ${name}_${bms_name}_max_voltage_cell_number
    address: 0x1248
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: ""
    state_class: measurement
    accuracy_decimals: 0
    bitmask: 0xFF00
    filters:
      - offset: 1.0

  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller
    name: ${name}_${bms_name}_min_voltage_cell_number
    address: 0x1248
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: ""
    state_class: measurement
    accuracy_decimals: 0
    bitmask: 0x00FF
    filters:
      - offset: 1.0

  # # 0x124A   74    UINT16    2    R    CellWireRes0    mΩ
  # - platform: modbus_controller
    # modbus_controller_id: ${bms_name}_modbus_controller
    # name: ${name}_${bms_name}_cell_1_wire_resistance
    # address: 0x124A
    # register_type: holding
    # value_type: U_WORD
    # unit_of_measurement: "Ω"
    # state_class: measurement
    # accuracy_decimals: 3
    # filters:
      # - multiply: 0.001

  # # 0x124C   76    UINT16    2    R    CellWireRes1    mΩ
  # - platform: modbus_controller
    # modbus_controller_id: ${bms_name}_modbus_controller
    # name: ${name}_${bms_name}_cell_2_wire_resistance
    # address: 0x124C
    # register_type: holding
    # value_type: U_WORD
    # unit_of_measurement: "Ω"
    # state_class: measurement
    # accuracy_decimals: 3
    # filters:
      # - multiply: 0.001

  # # 0x124E   78    UINT16    2    R    CellWireRes2    mΩ
  # - platform: modbus_controller
    # modbus_controller_id: ${bms_name}_modbus_controller
    # name: ${name}_${bms_name}_cell_3_wire_resistance
    # address: 0x124E
    # register_type: holding
    # value_type: U_WORD
    # unit_of_measurement: "Ω"
    # state_class: measurement
    # accuracy_decimals: 3
    # filters:
      # - multiply: 0.001

  # # 0x1250   80    UINT16    2    R    CellWireRes3    mΩ
  # - platform: modbus_controller
    # modbus_controller_id: ${bms_name}_modbus_controller
    # name: ${name}_${bms_name}_cell_4_wire_resistance
    # address: 0x1250
    # register_type: holding
    # value_type: U_WORD
    # unit_of_measurement: "Ω"
    # state_class: measurement
    # accuracy_decimals: 3
    # filters:
      # - multiply: 0.001

  # # 0x1252   82    UINT16    2    R    CellWireRes4    mΩ
  # - platform: modbus_controller
    # modbus_controller_id: ${bms_name}_modbus_controller
    # name: ${name}_${bms_name}_cell_5_wire_resistance
    # address: 0x1252
    # register_type: holding
    # value_type: U_WORD
    # unit_of_measurement: "Ω"
    # state_class: measurement
    # accuracy_decimals: 3
    # filters:
      # - multiply: 0.001

  # # 0x1254   84    UINT16    2    R    CellWireRes5    mΩ
  # - platform: modbus_controller
    # modbus_controller_id: ${bms_name}_modbus_controller
    # name: ${name}_${bms_name}_cell_6_wire_resistance
    # address: 0x1254
    # register_type: holding
    # value_type: U_WORD
    # unit_of_measurement: "Ω"
    # state_class: measurement
    # accuracy_decimals: 3
    # filters:
      # - multiply: 0.001

  # # 0x1256   86    UINT16    2    R    CellWireRes6    mΩ
  # - platform: modbus_controller
    # modbus_controller_id: ${bms_name}_modbus_controller
    # name: ${name}_${bms_name}_cell_7_wire_resistance
    # address: 0x1256
    # register_type: holding
    # value_type: U_WORD
    # unit_of_measurement: "Ω"
    # state_class: measurement
    # accuracy_decimals: 3
    # filters:
      # - multiply: 0.001

  # # 0x1258   88    UINT16    2    R    CellWireRes7    mΩ
  # - platform: modbus_controller
    # modbus_controller_id: ${bms_name}_modbus_controller
    # name: ${name}_${bms_name}_cell_8_wire_resistance
    # address: 0x1258
    # register_type: holding
    # value_type: U_WORD
    # unit_of_measurement: "Ω"
    # state_class: measurement
    # accuracy_decimals: 3
    # filters:
      # - multiply: 0.001

  # # 0x125A   90    UINT16    2    R    CellWireRes8    mΩ
  # - platform: modbus_controller
    # modbus_controller_id: ${bms_name}_modbus_controller
    # name: ${name}_${bms_name}_cell_9_wire_resistance
    # address: 0x125A
    # register_type: holding
    # value_type: U_WORD
    # unit_of_measurement: "Ω"
    # state_class: measurement
    # accuracy_decimals: 3
    # filters:
      # - multiply: 0.001

  # # 0x125C   92    UINT16    2    R    CellWireRes9    mΩ
  # - platform: modbus_controller
    # modbus_controller_id: ${bms_name}_modbus_controller
    # name: ${name}_${bms_name}_cell_10_wire_resistance
    # address: 0x125C
    # register_type: holding
    # value_type: U_WORD
    # unit_of_measurement: "Ω"
    # state_class: measurement
    # accuracy_decimals: 3
    # filters:
      # - multiply: 0.001

  # # 0x125E   94    UINT16    2    R    CellWireRes10   mΩ
  # - platform: modbus_controller
    # modbus_controller_id: ${bms_name}_modbus_controller
    # name: ${name}_${bms_name}_cell_11_wire_resistance
    # address: 0x125E
    # register_type: holding
    # value_type: U_WORD
    # unit_of_measurement: "Ω"
    # state_class: measurement
    # accuracy_decimals: 3
    # filters:
      # - multiply: 0.001

  # # 0x1260   96    UINT16    2    R    CellWireRes11   mΩ
  # - platform: modbus_controller
    # modbus_controller_id: ${bms_name}_modbus_controller
    # name: ${name}_${bms_name}_cell_12_wire_resistance
    # address: 0x1260
    # register_type: holding
    # value_type: U_WORD
    # unit_of_measurement: "Ω"
    # state_class: measurement
    # accuracy_decimals: 3
    # filters:
      # - multiply: 0.001

  # # 0x1262   98    UINT16    2    R    CellWireRes12   mΩ
  # - platform: modbus_controller
    # modbus_controller_id: ${bms_name}_modbus_controller
    # name: ${name}_${bms_name}_cell_13_wire_resistance
    # address: 0x1262
    # register_type: holding
    # value_type: U_WORD
    # unit_of_measurement: "Ω"
    # state_class: measurement
    # accuracy_decimals: 3
    # filters:
      # - multiply: 0.001

  # # 0x1264   100   UINT16    2    R    CellWireRes13   mΩ
  # - platform: modbus_controller
    # modbus_controller_id: ${bms_name}_modbus_controller
    # name: ${name}_${bms_name}_cell_14_wire_resistance
    # address: 0x1264
    # register_type: holding
    # value_type: U_WORD
    # unit_of_measurement: "Ω"
    # state_class: measurement
    # accuracy_decimals: 3
    # filters:
      # - multiply: 0.001

  # # 0x1266   102   UINT16    2    R    CellWireRes14   mΩ
  # - platform: modbus_controller
    # modbus_controller_id: ${bms_name}_modbus_controller
    # name: ${name}_${bms_name}_cell_15_wire_resistance
    # address: 0x1266
    # register_type: holding
    # value_type: U_WORD
    # unit_of_measurement: "Ω"
    # state_class: measurement
    # accuracy_decimals: 3
    # filters:
      # - multiply: 0.001

  # # 0x1268   104   UINT16    2    R    CellWireRes15   mΩ
  # - platform: modbus_controller
    # modbus_controller_id: ${bms_name}_modbus_controller
    # name: ${name}_${bms_name}_cell_16_wire_resistance
    # address: 0x1268
    # register_type: holding
    # value_type: U_WORD
    # unit_of_measurement: "Ω"
    # state_class: measurement
    # accuracy_decimals: 3
    # filters:
      # - multiply: 0.001

  - platform: template
    name: ${name}_${bms_name}_battery_charging_power
    id: ${bms_name}_battery_charging_power
    unit_of_measurement: 'W'
    accuracy_decimals: 2
    update_interval: ${bms_template_update}
    icon: mdi:power 
    lambda: |-
      if (float(id(${bms_name}_battery_power).state)> 0){
        return ( (id(${bms_name}_battery_power).state) );   
      }
      else {
        return 0.0;
      }  
      
  - platform: total_daily_energy
    name: ${name}_${bms_name}_battery_charging_energy_today
    power_id: ${bms_name}_battery_charging_power
    unit_of_measurement: 'kWh'
    accuracy_decimals: 1
    id: ${bms_name}_battery_charging_energy_today
    method: trapezoid
    filters:
       # Multiplication factor from W to kW is 0.001
       - multiply: 0.001
    icon: mdi:counter
    
  - platform: template
    name: ${name}_${bms_name}_battery_charging_energy_yesterday
    id: ${bms_name}_battery_charging_energy_yesterday
    unit_of_measurement: 'kWh'
    accuracy_decimals: 1
    icon: mdi:power
    update_interval: ${bms_template_update}
    lambda: |-
      return ( id(${bms_name}_battery_charging_energy_yesterday).state = id(${bms_name}_battery_charging_energy_yesterday_global) );
      
  - platform: template
    name: ${name}_${bms_name}_battery_discharging_power
    id: ${bms_name}_battery_discharging_power
    unit_of_measurement: 'W'
    accuracy_decimals: 1
    update_interval: ${bms_template_update}
    icon: mdi:power 
    lambda: |-
      if (float(id(${bms_name}_battery_power).state)< 0){
        return ( (id(${bms_name}_battery_power).state) );   
      }
      else {
        return 0.0;
      }
  - platform: total_daily_energy
    name: ${name}_${bms_name}_battery_discharging_energy_today
    power_id: ${bms_name}_battery_discharging_power
    unit_of_measurement: 'kWh'
    accuracy_decimals: 1
    id: ${bms_name}_battery_discharging_energy_today
    method: trapezoid
    filters:
       # Multiplication factor from W to kW is 0.001
       - multiply: 0.001
    icon: mdi:counter
    
  - platform: template
    name: ${name}_${bms_name}_battery_discharging_energy_yesterday
    id: ${bms_name}_battery_discharging_energy_yesterday
    unit_of_measurement: 'kWh'
    accuracy_decimals: 1
    icon: mdi:power
    update_interval: ${bms_template_update}
    lambda: |-
      return ( id(${bms_name}_battery_discharging_energy_yesterday).state = id(${bms_name}_battery_discharging_energy_yesterday_global) );

      
  # 0x128A   138    INT16    2    R    TempMos         0.1 °C
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller
    name: ${name}_${bms_name}_mosfet_temperature
    address: 0x128A
    register_type: holding
    value_type: S_WORD
    unit_of_measurement: "°C"
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.1

  # 0x128C   140   UINT32    4    R    CellWireResSta  Bit per Cell
  # 0x1290   144   UINT32    4    R    BatVol          mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller
    name: ${name}_${bms_name}_total_voltage
    address: 0x1290
    register_type: holding
    value_type: U_DWORD
    unit_of_measurement: "V"
    device_class: voltage
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001
  
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller
    name: ${name}_${bms_name}_battery_power
    id: ${bms_name}_battery_power
    address: 0x1294
    register_type: holding
    value_type: S_DWORD
    unit_of_measurement: "W"
    device_class: power
    state_class: measurement
    accuracy_decimals: 2
    filters:
      - multiply: 0.001
      
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller
    name: ${name}_${bms_name}_battery_current
    id: ${bms_name}_battery_current
    address: 0x1298
    register_type: holding
    value_type: S_DWORD_R
    unit_of_measurement: "A"
    device_class: current
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001    

  # 0x1294   148   UINT32    4    R    BatWatt         mW
  # 0x1298   152    INT32    4    R    BatCurrent      mA
  # 0x129C   156    INT16    2    R    TempBat 1       0.1 °C
  # 0x129E   158    INT16    2    R    TempBat 2       0.1 °C
  # 0x12A0   160   UINT32    4    R    AlarmBitmask
  # 0x12A4   164    INT16    2    R    BalanCurrent    mA
  # 0x12A6   166 UINT8+UINT8 2    R    BalanStatatus (2:放电; 1:充电 ; 0:关闭) / SOCStateOfcharge %
  # 0x12A8   168    INT32    2    R    SOCCapRemain    mAH
  # 0x12AC   172   UINT32    4    R    SOCFullChargeCap    mAH
  # 0x12B0   176   UINT32    4    R    SOCCycleCount   次
  # 0x12B4   180   UINT32    4    R    SOCCycleCap     mAH
  # 0x12B8   184 UINT8+UINT8 2    R    StateOfHealth % / Precharge stats (1:打开 ; 0:关闭)
  # 0x12BA   186   UINT16    2    R    UserAlarm
  # 0x12BC   188   UINT32    4    R    RunTime         S
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller
    name: ${name}_${bms_name}_total_runtime_in_seconds
    id: ${bms_name}_total_runtime
    address: 0x12BC
    register_type: holding
    value_type: U_DWORD
    state_class: measurement
    accuracy_decimals: 0
    

  # 0x12C0   192 UINT8+UINT8 Charge (1:打开 ; 0:关闭) / Discharge (1:打开 ; 0:关闭)
  # 0x12C2   194   UINT16    2    R    UserAlarm2
  # 0x12C4   196   UINT16    2    R    TimeDcOCPR      S
  # 0x12C6   198   UINT16    2    R    TimeDcSCPR      S
  # 0x12C8   200   UINT16    2    R    TimeCOCPR       S
  # 0x12CA   202   UINT16    2    R    TimeCSCPR       S
  # 0x12CC   204   UINT16    2    R    TimeUVPR        S
  # 0x12CE   206   UINT16    2    R    TimeOVPR        S
  # 0x12D0   208 UINT8+UINT8 2    R    AbsentBitmask (Bit0: MOS TempSensorAbsent, Bit1: BATTempSensor1Absent, Bit2: BATTempSensor2Absent, Bit4: BATTempSensor4Absent, Bit5: BATTempSensor5Absent) / Heating
  # 0x12D2   210   UINT16    2    R    Reserved
  # 0x12D4   212   UINT16    2    R    TimeEmergency   S
  # 0x12D6   214   UINT16    2    R    BatCurCorrect
  # 0x12D8   216   UINT16    2    R    VolChargCur     mV
  # 0x12DA   218   UINT16    2    R    VolDischargCur  mV

switch:
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller
    name: ${name}_${bms_name}_discharging
    custom_command: [0x00, 0x03, 0x10, 0x74, 0x00, 0x02]
    write_lambda: |-
      payload.push_back(0x00);
      payload.push_back(0x10);
      payload.push_back(0x10);
      payload.push_back(0x74);
      payload.push_back(0x00);
      payload.push_back(0x02);
      payload.push_back(0x04);
      payload.push_back(0x00);
      payload.push_back(0x00);
      payload.push_back(0x00);
      payload.push_back(x);
      return true;
    lambda: |-
      if (data.size() != 4 ) {
        ESP_LOGE("Custom", "Invalid data size %d",data.size());
        return {};
      }
      return (data[3] == 1);

  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller
    name: ${name}_${bms_name}_charging
    custom_command: [0x00, 0x03, 0x10, 0x70, 0x00, 0x02]
    write_lambda: |-
      payload.push_back(0x00);
      payload.push_back(0x10);
      payload.push_back(0x10);
      payload.push_back(0x70);
      payload.push_back(0x00);
      payload.push_back(0x02);
      payload.push_back(0x04);
      payload.push_back(0x00);
      payload.push_back(0x00);
      payload.push_back(0x00);
      payload.push_back(x);
      return true;
    lambda: |-
      if (data.size() != 4 ) {
        ESP_LOGE("Custom", "Invalid data size %d",data.size());
        return {};
      }
      return (data[3] == 1);

  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller
    name: ${name}_${bms_name}_balancing
    custom_command: [0x00, 0x03, 0x10, 0x78, 0x00, 0x02]
    write_lambda: |-
      payload.push_back(0x00);
      payload.push_back(0x10);
      payload.push_back(0x10);
      payload.push_back(0x78);
      payload.push_back(0x00);
      payload.push_back(0x02);
      payload.push_back(0x04);
      payload.push_back(0x00);
      payload.push_back(0x00);
      payload.push_back(0x00);
      payload.push_back(x);
      return true;
    lambda: |-
      if (data.size() != 4 ) {
        ESP_LOGE("Custom", "Invalid data size %d",data.size());
        return {};
      }
      return (data[3] == 1);

text_sensor:
  - platform: template
    name: ${name}_${bms_name}_total_runtime_formatted
    update_interval: ${bms_text_update}
    lambda: |-
      std::string value = "Unknown";
      if (id(${bms_name}_total_runtime) && !isnan(id(${bms_name}_total_runtime).state)) {
        int seconds = (int) id(${bms_name}_total_runtime).state;
        int years = seconds / (24 * 3600 * 365);
        seconds = seconds % (24 * 3600 * 365);
        int days = seconds / (24 * 3600);
        seconds = seconds % (24 * 3600);
        int hours = seconds / 3600;
        value = (years ? to_string(years) + "y " : "") + (days ? to_string(days) + "d " : "") +
                (hours ? to_string(hours) + "h" : "");
      }
      return value;      
    
