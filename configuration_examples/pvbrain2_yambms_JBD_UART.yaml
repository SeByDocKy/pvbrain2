# Updated : 2025.01.30
# Version : 1.5.4
# GitHub  : https://github.com/Sleeper85/esphome-yambms

# YamBMS ( Yet another multi-BMS Merging Solution )

# This YAML is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation, either version 3
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/gpl.html>.

substitutions:
  # YamBMS settings
  yambms_id: 'yambms1'
  yambms_name: 'YamBMS 1'
  # Shunt settings
  shunt_update_interval: '3s' # frequency at which Shunt data is refreshed
  shunt_combine_interval: '1s' # frequency at which data is combined in YamBMS
  # BMS settings
  bms_battery_chemistry: '1' # 1-LFP | 2-Li-ion | 3-LTO
  bms_update_interval: '3s' # frequency at which BMS data is refreshed, going below '3s' can cause problems
  bms_combine_interval: '1s' # frequency at which data is combined in YamBMS
  bms_cutoff_timer: '50s' # Time in seconds during which the EOC conditions must be respected (cut-off + cells not equalizing)

packages:
  # Base config
  device_rgb_led: !include ../pvbrain2/base/device_rgb_led_status.yaml
  # CAN transceiver
  device_canbus_node1: !include ../pvbrain2/base/device_canbus_esp32can.yaml # canbus_node1
  # device_canbus_node2: !include ../pvbrain2/base/device_canbus_mcp2515.yaml # canbus_node2

  # shunt1: !include
  #   file: ../pvbrain2/powermeter/dc/yambms/shunt_combine_Victron_SmartShunt_UART_expander.yaml # shunt_combine_Junctek_KHF_UART.yaml
  #   vars:
  #     shunt_id: '1' # must be a number
  #     shunt_name: 'Shunt 1'
  #     shunt_uart_id: 'uart_${uart_hub_bus}_2' # Your UART port

  bms1: !include
    file: ../pvbrain2/bms/yambms/bms_combine_JBD_UART_full.yaml
    vars:
      bms_id: '1' # must be a number
      bms_name: 'BMS 1'
      bms_uart_id: 'uart_${uart_hub_bus}_4'
      bms_rx_timeout: '150ms'
      # Required settings cannot be retrieved from BMS
      # These values ​​must match your BMS settings
      # LFP values example
      bms_max_charge_current: '100' # A. Used to calculate maximum charge current
      bms_max_discharge_current: '100' # A. Used to calculate maximum discharge current
      bms_cell_ovp: '3.650' # V. Used by 'Auto CCL' functions
      bms_cell_uvp: '2.800' # V. Used by 'Auto DCL' functions and to calculate maximum discharge voltage
      bms_balance_trigger_voltage: '0.010' # V. Used by 'Auto CVL' functions
  
  bms2: !include
    file: ../pvbrain2/bms/yambms/bms_combine_JBD_UART_full.yaml
    vars:
      bms_id: '2' # must be a number
      bms_name: 'BMS 2'
      bms_uart_id: 'uart_${uart_hub_bus}_5'
      bms_rx_timeout: '150ms'
      # Required settings cannot be retrieved from BMS
      # These values ​​must match your BMS settings
      # LFP values example
      bms_max_charge_current: '100' # A. Used to calculate maximum charge current
      bms_max_discharge_current: '100' # A. Used to calculate maximum discharge current
      bms_cell_ovp: '3.650' # V. Used by 'Auto CCL' functions
      bms_cell_uvp: '2.800' # V. Used by 'Auto DCL' functions and to calculate maximum discharge voltage
      bms_balance_trigger_voltage: '0.010' # V. Used by 'Auto CVL' functions

  yambms1: !include
    file: ../pvbrain2/translation/yambms/yambms.yaml
    vars:
      # Please read the cut-off charging logic README to understand how the YamBMS works
      yambms_update_interval: '1s'
      # Input numbers can be displayed as a slider or an input box, options are 'slider' or 'box'.
      yambms_input_number_mode: 'slider'
      # Please check and fill in the options below correctly according to your battery chemistry and number of cells in series.
      # These parameters are important and used for charging logic.
      # Battery Chemistry
      yambms_battery_chemistry: '1' # 1-LFP | 2-Li-ion | 3-LTO
      # Number of cells in series
      yambms_cell_count: '16'
      # Bulk / Absorption Voltage : corresponds to the Bulk voltage that will be used to charge the battery. (LFP : 55.2V = 3.45V/Cell for 16S battery)
      yambms_bulk_v: '55.2'
      # Float Voltage : corresponds to the voltage at which the battery would be maintained at the end of charge. (LFP : 53.6V = 3.35V/Cell for 16S battery)
      yambms_float_v: '53.6'
      # Rebulk voltage, voltage from which a new Bulk charge can start. (LFP : 52.8V = 3.3V/Cell for 16S battery)
      yambms_rebulk_v: '52.8'
      # Maximum time in minutes that the cut-off step can last before charging is complete
      # If your cells are properly balanced this step ends at the fastest after the `cut-off timer`
      # This timer can be deactivated with a switch
      yambms_eoc_timer: '30'
      # Time in seconds during which the end of charge conditions must be respected (cut-off + cells not equalizing)
      yambms_cutoff_timer: '60'
      # Maximum charging cycles is used to calculate the battey SOH, LF280K v3 =8000.0, LF280K v2 =6000.0, LF280=3000.0 (decimal is required)
      yambms_max_cycles: '6000.0'

  canbus1: !include
    file: ../pvbrain2/translation/yambms/yambms_canbus.yaml
    vars:
      canbus_id: 'canbus1'
      canbus_name: 'CANBUS 1'
      canbus_node_id: 'canbus_node1'
      canbus_light_id: 'on_board_light_io48' # on_board_light_io48 / led_light_1
      # The CANBUS link will be considered down if no response from the inverter (ID 0x305) for 5s
      # The Deye inverter sends the ACK (can_id 0x305) only when it receives the can_id 0x356
      canbus_link_timer: '5s'
