# Updated : 2025.07.09
# Version : 1.5.8
# GitHub  : https://github.com/Sleeper85/esphome-yambms

# YamBMS ( Yet another multi-BMS Merging Solution )

# This YAML is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation, either version 3
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/gpl.html>.

######################## YamBMS Remote Packages Version ########################

# You can compile this YAML directly without the `packages` folder.
# The packages will be automatically downloaded from GitHub.
# Don't forget to configure your WiFi credentials in the secrets.yaml

################################################################################

# +--------------------------------------+
# | Global Settings                      |
# +--------------------------------------+
substitutions:
  # +--------------------------------------+
  # | YamBMS Settings                      |
  # +--------------------------------------+
  # Please read the cut-off charging logic README to understand how the YamBMS works
  yambms_id: 'yambms1'
  yambms_name: 'YamBMS 1'
  yambms_update_interval: '1s'
  # Input numbers can be displayed as a slider or an input box, options are 'slider' or 'box'.
  yambms_input_number_mode: 'slider'
  # Please check and fill in the options below correctly according to your battery chemistry and number of cells in series.
  # These parameters are important and used for charging logic.
  # Battery Chemistry
  yambms_battery_chemistry: '1' # 1-LFP | 2-Li-ion | 3-LTO
  # Number of cells in series
  yambms_cell_count: '16'
  # Bulk / Absorption Voltage : corresponds to the Bulk voltage that will be used to charge the battery. (LFP : 55.2V = 3.45V/Cell for 16S battery)
  yambms_bulk_v: '55.2'
  # Float Voltage : corresponds to the voltage at which the battery would be maintained at the end of charge. (LFP : 53.6V = 3.35V/Cell for 16S battery)
  yambms_float_v: '53.6'
  # Rebulk voltage, voltage from which a new Bulk charge can start. (LFP : 52.8V = 3.3V/Cell for 16S battery)
  yambms_rebulk_v: '52.8'
  # Maximum time in minutes that the cut-off step can last before charging is complete
  # If your cells are properly balanced this step ends at the fastest after the `cut-off timer`
  # This timer can be deactivated with a switch
  yambms_eoc_timer: '30'
  # Time in seconds during which the end of charge conditions must be respected (cut-off + cells not equalizing)
  yambms_cutoff_timer: '60'
  # Max. charge current : corresponds to the maximum charge current which may be requested by YamBMS.
  # The current requested will be proportional to the BMS count without ever exceeding this value.
  yambms_max_requested_charge_current: '300' # in Ampere
  # Max. discharge current : corresponds to the maximum discharge current which may be requested by YamBMS.
  # The current requested will be proportional to the BMS count without ever exceeding this value.
  yambms_max_requested_discharge_current: '300' # in Amper
  # +--------------------------------------+
  # | Shunt Settings                      |
  # +--------------------------------------+
  shunt_update_interval: '3s'  # frequency at which Shunt data is refreshed
  shunt_combine_interval: '1s' # frequency at which Shunt data is combined in YamBMS
  # +--------------------------------------+
  # | BMS Settings                         |
  # +--------------------------------------+
  bms_update_interval: '3s'    # frequency at which BMS data is refreshed, going below '3s' can cause problems
  bms_combine_interval: '1s'   # frequency at which BMS data is combined in YamBMS
  bms_cutoff_timer: '50s'      # time during which the end of charge conditions must be respected (cut-off + cells not equalizing)

# +--------------------------------------+
# | Remote Packages Section              |
# +--------------------------------------+

# PLEASE READ : https://github.com/Sleeper85/esphome-yambms/blob/main/documents/README/YamBMS_main_YAML_HowTo.md

packages:

  # You don't have to import a shunt but you must import at least one BMS.

  # shunt:
  #   url: https://github.com/Sleeper85/esphome-yambms
  #   ref: main
  #   refresh: 0s
  #   files:
  #     # Shunt 1
  #     - path: 'packages/shunt/shunt_combine_Victron_SmartShunt_UART_expander.yaml' # shunt_combine_Junctek_KHF_UART.yaml
  #       vars:
  #         shunt_id: '1' # must be a number
  #         shunt_name: 'Shunt 1'
  #         shunt_uart_id: 'uart_${uart_hub_bus}_2'

  bms:
    url: https://github.com/Sleeper85/esphome-yambms
    ref: main
    refresh: 0s
    files:
      # RS485 Sniffer
      - path: 'packages/bms/bms_combine_JK_RS485_Modbus_sniffer.yaml'
        vars:
          sniffer_id: 'sniffer1'
          sniffer_protocol: 'JK02_32S'
          sniffer_uart_id: 'uart_${uart_hub_bus}_4'
      # BMS 1
      - path: 'packages/bms/bms_combine_JK_RS485_Modbus_bms_standard.yaml'
        vars:
          # Sniffer ID
          sniffer_id: 'sniffer1'
          # BMS vars
          bms_id: '1' # must be a number
          bms_name: 'JK-BMS 1'
          bms_address: '0x01' # BMS 1 DIP switch
      # BMS 2
      - path: 'packages/bms/bms_combine_JK_RS485_Modbus_bms_standard.yaml'
        vars:
          # Sniffer ID
          sniffer_id: 'sniffer1'
          # BMS vars
          bms_id: '2' # must be a number
          bms_name: 'JK-BMS 2'
          bms_address: '0x02' # BMS 2 DIP switch
      # BMS 3
      - path: 'packages/bms/bms_combine_JK_RS485_Modbus_bms_standard.yaml'
        vars:
          # Sniffer ID
          sniffer_id: 'sniffer1'
          # BMS vars
          bms_id: '3' # must be a number
          bms_name: 'JK-BMS 3'
          bms_address: '0x03' # BMS 3 DIP switch
      # BMS 4
      - path: 'packages/bms/bms_combine_JK_RS485_Modbus_bms_standard.yaml'
        vars:
          # Sniffer ID
          sniffer_id: 'sniffer1'
          # BMS vars
          bms_id: '4' # must be a number
          bms_name: 'JK-BMS 4'
          bms_address: '0x04' # BMS 4 DIP switch
      # BMS 5
      - path: 'packages/bms/bms_combine_JK_RS485_Modbus_bms_standard.yaml'
        vars:
          # Sniffer ID
          sniffer_id: 'sniffer1'
          # BMS vars
          bms_id: '5' # must be a number
          bms_name: 'JK-BMS 5'
          bms_address: '0x05' # BMS 5 DIP switch
      # BMS 6
      - path: 'packages/bms/bms_combine_JK_RS485_Modbus_bms_standard.yaml'
        vars:
          # Sniffer ID
          sniffer_id: 'sniffer1'
          # BMS vars
          bms_id: '6' # must be a number
          bms_name: 'JK-BMS 6'
          bms_address: '0x06' # BMS 6 DIP switch
      # BMS 7
      - path: 'packages/bms/bms_combine_JK_RS485_Modbus_bms_standard.yaml'
        vars:
          # Sniffer ID
          sniffer_id: 'sniffer1'
          # BMS vars
          bms_id: '7' # must be a number
          bms_name: 'JK-BMS 7'
          bms_address: '0x07' # BMS 7 DIP switch
      # BMS 8
      - path: 'packages/bms/bms_combine_JK_RS485_Modbus_bms_standard.yaml'
        vars:
          # Sniffer ID
          sniffer_id: 'sniffer1'
          # BMS vars
          bms_id: '8' # must be a number
          bms_name: 'JK-BMS 8'
          bms_address: '0x08' # BMS 8 DIP switch

  yambms:
    url: https://github.com/Sleeper85/esphome-yambms
    ref: main
    refresh: 0s
    files:
      - path: 'packages/yambms/yambms.yaml'

  canbus:
    url: https://github.com/Sleeper85/esphome-yambms
    ref: main
    refresh: 0s
    files:
      - path: 'packages/yambms/yambms_canbus.yaml'
        vars:
          canbus_id: 'canbus1'
          canbus_name: 'CANBUS 1'
          canbus_node_id: 'canbus_node1'
          canbus_light_id: 'esp_light'
          # The CANBUS link will be considered down if no response from the inverter (0x305 frame) for 5s
          # The Deye inverter sends the ACK 0x305 only when it receives the 0x356 frame.
          canbus_link_timer: '5s'
