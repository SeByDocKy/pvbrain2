substitutions:
  name: 'pvbrain2'
  git_url: 'https://github.com/SeByDocKy/pvbrain2'
  # friendly_name: 'pvbrain2'

  ###### For builtin ESP32 S3 UART ports ######
  
  uart_esp0_baudrate: '1200'  # Linky   #1200 if historique >> #9600 if standard
  uart_esp1_baudrate: '9600'
  uart_esp2_baudrate: '9600'
 
  ###### For extended UART ports with the 2 WK2168 ######

  uart0_baudrate: '2400'    #WKS         {RJ45-UART0} 
  uart1_baudrate: '38400'   #JSY193
  uart2_baudrate: '19200'   #smartshunt
  uart3_baudrate: '19200'   #SRNE        {RJ45-UART3} 
  uart4_baudrate: '115200'  #JKBMS0
  uart5_baudrate: '115200'  #JKBMS1
  uart6_baudrate: '115200'  #Pylontech
  uart7_baudrate: '9600'    #EPEVER      {RJ45-UART7} 

  ##### With uart extender addon board ######

  uart8_baudrate: '2400'
  uart9_baudrate: '38400'
  uart10_baudrate: '19200'
  uart11_baudrate: '9600'
  
  uart_hub_bus: 'spi'    # 'i2c' or 'spi'  go into pvbrain2/base/device_base.yaml to select I2C or SPI UART Hub file
                         # If SPI selected, don't forget to jump/solder the two pairs of pin together located back of WK2168 boards  

  #### Example of '!extend' for builtin ESP32_S3_UART special cases ######
# uart:
#   - id: !extend uart_esp_0              # ID of the UART to modify; Here for Linky.
#     parity: EVEN                        # Is requiered for Teleinfo
#     data_bits: 7                        # Is requiered for Teleinfo

  #### Example of extend for WK2168_UART special cases ######
# wk2168_spi:
#   - id: !extend  uart_bridge1             # ID of the 'WK_UART_Bridge' to modify
#     uart:
#       - id: !extend uart_spi_6            # ID of the 'WK_UART' to modify
#         stop_bits: 2                      # For the example, with Pylontech batteries, it is recommended to set the stop_bits to 2

 #### Example of '!remove' a component ####
# sx1509: !remove
# dallas: !remove

####### ###### ###### ######

esphome:
  name: ${name}
  # friendly_name: ${name}
  # comment: 'Solar system braining and more !'
  # area: 'Local Technique'
  project:
    name: esphome.pvbrain2
    version: "1.0.1"
  min_version: 2024.3.0
  # platformio_options:                ##### the following option is required for ESP32 S3 with memory > 16MB, eg. the N32R8V
  #    board_build.arduino.memory_type: opi_opi
  #    board_build.flash_mode: dio
  #    board_upload.maximum_ram_size: 524288
  ##    board_build.partitions: large_littlefs_32MB.csv
  #    build_flags: 
  #     -DBOARD_HAS_PSRAM 
  #     -DARDUINO_USB_CDC_ON_BOOT=1
  #     -mfix-esp32-psram-cache-issue  

esp32:
  board: esp32-s3-devkitc-1
  # flash_size: 32MB  #32 MB   ajust according to your particular ESP32 S3....
  # partitions: large_littlefs_32MB.csv
  framework:
    type: esp-idf
    # version: 5.1.2 # 5.2.1
    # platform_version: 6.6.0  # required with esp-idf branch >5.1x
    # sdkconfig_options:
    #   CONFIG_ESPTOOLPY_FLASHSIZE_32MB: "y"
    #   COMPILER_OPTIMIZATION_SIZE: y
    #   CONFIG_COMPILER_OPTIMIZATION_PERF: y

    # type: arduino
    # version: 2.0.15 
    # platform_version: 6.6.0
    
      
# psram:
  # mode: octal
  # speed: 80MHz

# Enable logging
logger:
   baud_rate: 0

# Enable Home Assistant API
api:
  # encryption:
  #   key: "vR4R7EBch24hzs8Fga1ATBfRa6YWxpw9PfzRLJFoqY4="

ota:
  # password: "b82b9faf767e862e00fd6aba6c360b7f"

# web_server:
#   port: 80

dashboard_import:
  package_import_url: github://SeByDocKy/pvbrain2/pvbrain2.yaml@main

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Pvbrain2 Fallback Hotspot"
    password: !secret ap_password

# captive_portal:

packages:

  ########################   Devices  ######################
  
  device_base: !include
    url: ${git_url}
    ref: main
    refresh: 0s
    file: pvbrain2/base/device_base.yaml
    
    
  # device_uart_extender_addon: !include 
  #   # url: ${git_url}
  #   # refresh: 0s
  #   file: pvbrain2/addons/uart_extender_addon/device_wk2168_addon_spi.yaml
    
  # light_1: !include 
  #   # url: ${git_url}
  #   # refresh: 0s
  #   file: pvbrain2/environmental/light/device_ws2812b.yaml
  #   vars:
  #     light_name: ws2812b
  #     light_num_leds: '2'
  #     light_order: 'GRB'

  relays_1: !include
    url: ${git_url}
    refresh: 0s
    file: pvbrain2/relay/device_relay.yaml
    vars:
      relays_name: 'relay'
      relays_hub: 'sx1509_hub0'
      relays_channel0: 'inverter'
      relays_channel0_pin: '0'
      relays_channel1: 'ats_control'
      relays_channel1_pin: '1'
      relays_channel2: '2'
      relays_channel2_pin: '2'
      relays_channel3: '3'
      relays_channel3_pin: '3'
      relays_channel4: '4'
      relays_channel4_pin: '4'
      relays_channel5: '5'
      relays_channel5_pin: '5'
      relays_channel6: '6'
      relays_channel6_pin: '6'
      relays_channel7: '7'
      relays_channel7_pin: '7'

#   fil_pilote: !include
#     # url: ${git_url}
#     # refresh: 0s
#     file: pvbrain2/addons/fil_pilote/device_fp_x8.yaml  # REPLACE THE LOCATION OF "x8" BY NUMBER OF HEATER ZONES : 1 to 8
# #   file: pvbrain2/addons/fil_pilote/device_fp_x4.yaml  # << EXEMPLE
#     vars:
#       fpilote_bus: sx1509_hub1
#       fpilote_name: 'chauffage_zone'

#   teleinfo: !include 
#     # url: ${git_url}
#     # refresh: 0s
#     file: pvbrain2/addons/teleinfo/historique.yaml      # IF COUNTER IN MODE "Historique"
# #    file: pvbrain2/addons/teleinfo/standard.yaml       # IF COUNTER IN MODE "Standard"
#     vars:
#       linky_name: 'myteleinfo'
#       linky_uartid: uart_esp_0 #uart_${uart_hub_bus}_8
#       linky_update_interval: '5s'
    
  
  # ac_dimmer_1: !include
  #   # url: ${git_url}
  #   # refresh: 0s
  #   file: pvbrain2/ac_dimmer/device_robotdyn.yaml
  #   vars:
  #     ac_dimmer_name: 'ac_dimmer'
  #     ac_dimmer_gate_gpio: GPIO07
  #     ac_dimmer_zc_gpio: GPIO42

  # ac_dimmer_2: !include
  #   # url: ${git_url}
  #   # refresh: 0s
  #   file: pvbrain2/ac_dimmer/device_robotdyn.yaml
  #   vars:
  #     ac_dimmer_name: 'ac_dimmer'
  #     ac_dimmer_gate_gpio: GPIO03
  #     ac_dimmer_zc_gpio: GPIO42

  ssr_1: !include
    url: ${git_url}
    refresh: 0s
    file: pvbrain2/ac_dimmer/device_ssr.yaml
    vars:
      ssr_name: 'ssr'
      ssr_hub: 'sx1509_hub1'
      ssr_pin: '12'
  
  opto_1: !include
    url: ${git_url}
    refresh: 0s
    file: pvbrain2/optocoupler/device_opto.yaml
    vars:
      opto_name: 'opto_grid_230V'
      opto_gpio: GPIO05

  opto_2: !include
    url: ${git_url}
    refresh: 0s
    file: pvbrain2/optocoupler/device_opto.yaml
    vars:
      opto_name: 'opto_solar_230V'
      opto_gpio: GPIO04 
  
  bme_280_1: !include
    url: ${git_url}
    refresh: 0s
    file: pvbrain2/environmental/bme280/device_bme_280.yaml
    vars:
      bme_280_name: 'bme280'
      bme_280_address: '0x76'
      bme_280_i2c_bus: i2c1_bus
      bme_update_interval: '5s'

  # dallas_1: !include 
  #   # url: ${git_url}
  #   # refresh: 0s
  #   file: pvbrain2/environmental/dallas/device_dallas.yaml
  #   vars:
  #     dallas_name: 'dallas_temperature'
  #     pin: GPIO47
  #     dallas_address: '0x9f3c01f09613re85'
  #    # dallas_update_interval: '5s'  
  
  # bmp_280_1: !include
  #   file: pvbrain2/environmental/bmp280/device_bmp_280.yaml
  #   vars:
  #     bmp_280_name: 'bmp280'
  #     bmp_280_address: '0x77'
  #     bmp_280_i2c_bus: i2c1_bus
  #     bmp_update_interval: '5s'

  ats_1: !include
    url: ${git_url}
    refresh: 0s
    file: pvbrain2/ats/device_ats.yaml
    vars:
      ats_name: 'ats'
  
  inverter_1: !include
    url: ${git_url}
    refresh: 0s
    file: pvbrain2/inverter/voltronic/device_axpert_max.yaml
    vars:
      inverter_uart_id: uart_${uart_hub_bus}_0  # 'uart_i2c_0'
      inverter_name: 'axpert'
      inverter_update_interval: '1s'
      inverter_template_update: '2s'
      inverter_text_update: '5s'

  # inverter_2: !include
  #   # url: ${git_url}
  #   # refresh: 0s
  #   file: pvbrain2/inverter/victron/device_multirs.yaml
  #   vars:
  #     inverter_uart_id: uart_${uart_hub_bus}_6  # 'uart_i2c_6'
  #     inverter_name: 'multirs'
  #     inverter_throttle: '5s'
  #     inverter_update_interval: '3s'
  #     inverter_template_update: '5s'
  #     inverter_text_update: '5s'    
  
  # inverter_3: !include
  #   # url: ${git_url}
  #   # refresh: 0s
  #   file: pvbrain2/inverter/deye/device_deye.yaml
  #   vars:
  #     inverter_uart_id: uart_${uart_hub_bus}_7  # 'uart_i2c_1'
  #     inverter_name: 'deye'
  #     inverter_modbus_address: '1'
  #     inverter_modbus_send_wait_time: '200ms'
  #     inverter_modbus_throttle: '50ms'
  #     inverter_update_interval: '1s'
  #     inverter_template_update: '2s'
  #     inverter_text_update: '5s'

  # inverter_4: !include
  #   # url: ${git_url}
  #   # refresh: 0s
  #   file: pvbrain2/inverter/growatt/device_growatt.yaml
  #   vars:
  #     inverter_uart_id: uart_${uart_hub_bus}_7  # 'uart_i2c_1'
  #     inverter_name: 'growatt'
  #     inverter_modbus_address: '1'
  #     inverter_modbus_send_wait_time: '200ms'
  #     inverter_update_interval: '1s'

  # inverter_5: !include
  #   # url: ${git_url}
  #   # refresh: 0s
  #   file: pvbrain2/inverter/sofar/device_sofar.yaml
  #   vars:
  #     inverter_uart_id: uart_${uart_hub_bus}_7  # 'uart_i2c_1'
  #     inverter_name: 'sofar'
  #     inverter_modbus_address: '1'
  #     inverter_modbus_send_wait_time: '200ms'
  #     inverter_modbus_throttle: '100ms'
  #     inverter_update_interval: '1s'
   
  powermeter_1: !include
    url: ${git_url}
    refresh: 0s
    file: pvbrain2/powermeter/ac/jsy/device_jsy193.yaml
    vars:
      powermeter_uart_id: uart_${uart_hub_bus}_1
      powermeter_name: 'jsy193'
      powermeter_modbus_address: '1'
      powermeter_suffix1: 'solar'
      powermeter_suffix2: 'grid'
      powermeter_update_interval: '1s'
      powermeter_template_update: '2s'
      powermeter_modbus_send_wait_time: '200ms'

  # powermeter_2: !include
  #   # url: ${git_url}
  #   # refresh: 0s
  #   file: pvbrain2/powermeter/ac/jsy/device_jsy194.yaml
  #   vars:
  #     powermeter_uart_id: uart_${uart_hub_bus}_1
  #     powermeter_name: 'jsy194'
  #     powermeter_modbus_address: '2'
  #     powermeter_suffix1: 'solar'
  #     powermeter_suffix2: 'grid'
  #     powermeter_update_interval: '1s'
  #     powermeter_template_update: '2s'
  #     powermeter_modbus_send_wait_time: '200ms' 

  # powermeter_3: !include
  #   # url: ${git_url}
  #   # refresh: 0s
  #   file: pvbrain2/powermeter/ac/peacefair/device_pzem004tv3.yaml
  #   vars:
  #     powermeter_uart_id: uart_${uart_hub_bus}_1     # uart_${uart_hub_bus}_1
  #     powermeter_name: 'pzem_solar'
  #     powermeter_modbus_address: '1'
  #     powermeter_update_interval: '1s'
  #     powermeter_template_update: '2s'
  #     powermeter_modbus_send_wait_time: '200ms'

  # powermeter_4: !include
  #   # url: ${git_url}
  #   # refresh: 0s
  #   file: pvbrain2/powermeter/dc/peacefair/device_pzemdc.yaml
  #   vars:
  #     pzemdc_uart_id: uart_esp_1 #uart_${uart_hub_bus}_5
  #     pzemdc_name: 'pzemdc'
  #     pzemdc_address: '1'
  #     pzemdc_update_interval: '1s'
  #     pzemdc_template_update: '2s'
  #     pzemdc_modbus_send_wait_time: '200ms'
  #     pzemdc_offset_current: '0'
  #     pzemdc_offset_voltage: '-9.1'
  #     pzemdc_offset_power: '0'

  # powermeter_5: !include
  #   # url: ${git_url}
  #   # refresh: 0s
  #   file: pvbrain2/powermeter/ac/eastron/device_sdm.yaml
  #   vars:
  #     powermeter_uart_id: uart_${uart_hub_bus}_1     # uart_${uart_hub_bus}_1
  #     powermeter_name: 'sdm120_solar'
  #     powermeter_modbus_address: '1'
  #     powermeter_update_interval: '2s'
  #     powermeter_template_update: '2s'
  #     powermeter_modbus_send_wait_time: '200ms' 

  # ina3221_1: !include
  #   file: pvbrain2/powermeter/dc/texas_instruments/device_ina3221.yaml
  #   vars:
  #     ina3221_name: 'ina3221'
  #     ina3221_address: '0x40'
  #     ina3221_i2c_bus: i2c1_bus
  #     ina3221_update_interval: '5s'

  solar_charger_1: !include
    url: ${git_url}
    refresh: 0s
    file: pvbrain2/solar_charger/srne/device_srne.yaml
    vars:
      solar_charger_uart_id: uart_${uart_hub_bus}_3
      solar_charger_name: 'srne'
      solar_charger_modbus_address: '1'
      solar_charger_update_interval: '1s'
      solar_charger_template_update: '2s'
      solar_charger_text_update: '5s'
      solar_charger_modbus_send_wait_time: '200ms'
      solar_charger_modbus_throttle: '200ms'

  # solar_charger_2: !include
  #   # url: ${git_url}
  #   # refresh: 0s
  #   file: pvbrain2/solar_charger/srne/device_srne.yaml
  #   vars:
  #     solar_charger_uart_id: uart_${uart_hub_bus}_3
  #     solar_charger_name: 'srne'
  #     solar_charger_modbus_address: '2'
  #     solar_charger_update_interval: '1s'
  #     solar_charger_template_update: '2s'
  #     solar_charger_text_update: '5s'
  #     solar_charger_modbus_send_wait_time: '200ms'
  #     solar_charger_modbus_throttle: '200ms'

  # solar_charger_3: !include
  #   # url: ${git_url}
  #   # refresh: 0s
  #   file: pvbrain2/solar_charger/victron/device_smartsolar.yaml
  #   vars:
  #     solar_charger_uart_id: uart_${uart_hub_bus}_6
  #     solar_charger_name: 'smartsolar'
  #     solar_charger_throttle: '5s'
  #     solar_charger_update_interval: '1s'
  #     solar_charger_template_update: '2s'
  #     solar_charger_text_update: '5s'

  # solar_charger_4: !include
  #   # url: ${git_url}
  #   # refresh: 0s
  #   file: pvbrain2/solar_charger/esmart3/device_esmart3.yaml
  #   vars:
  #     solar_charger_uart_id: uart_${uart_hub_bus}_6
  #     solar_charger_name: 'esmart3'
  #     solar_charger_update_interval: '1s'

  # smartshunt_1: !include
  #   # url: ${git_url}
  #   # refresh: 0s
  #   file: pvbrain2/powermeter/dc/victron/device_smartshunt.yaml
  #   vars:
  #     smartshunt_uart_id: uart_${uart_hub_bus}_2
  #     smartshunt_name: 'smartshunt'
  #     smartshunt_update_interval: '1s'
  #     smartshunt_template_update: '2s'

  bms_1: !include
    url: ${git_url}
    refreh: 0s
    file: pvbrain2/bms/jkbms/device_jkbms.yaml
    vars:
      bms_uart_id: uart_${uart_hub_bus}_4
      bms_name: 'jkbms'
      bms_update_interval: '1s'
      bms_template_update: '2s'
      bms_text_update: '5s'

  # bms_2: !include
  #   # url: ${git_url}
  #   # refresh: 0s
  #   file: pvbrain2/bms/jkbms/device_jkbms.yaml
  #   vars:
  #     bms_uart_id: uart_${uart_hub_bus}_5
  #     bms_name: 'jkbms'
  #     bms_update_interval: '1s'
  #     bms_template_update: '2s'
  #     bms_text_update: '5s'

  # bms_3: !include
  #   # url: ${git_url}
  #   # refresh: 0s
  #   file: pvbrain2/bms/seplos/device_seplosbmsv3.yaml
  #   vars:
  #     bms_uart_id: uart_${uart_hub_bus}_4
  #     bms_name: 'seplosv3'
  #     bms_modbus_address: '0'
  #     bms_update_interval: '1s'
  #     bms_template_update: '2s'
  #     bms_text_update: '5s'
  #     bms_modbus_send_wait_time: '200ms'
  #     bms_modbus_throttle: '200ms'

  # bms_4: !include
  #   # url: ${git_url}
  #   # refresh: 0s
  #   file: pvbrain2/bms/seplos/device_seplosbms.yaml
  #   vars:
  #     bms_uart_id: uart_${uart_hub_bus}_7
  #     bms_name: 'seplos'
  #     bms_modbus_address: '0'
  #     bms_protocol: '0x20'  # 0x20 (Seplos), 0x26 (Boqiang)
  #     bms_update_interval: '5s'
  #     bms_template_update: '5s'
  #     bms_rx_timeout: '150ms'

  # bms_5: !include
  #   # url: ${git_url}
  #   # refresh: 0s
  #   file: pvbrain2/bms/ant/device_antbms.yaml
  #   vars:
  #     bms_uart_id: uart_${uart_hub_bus}_6
  #     bms_name: 'antbms'
  #     bms_update_interval: '5s'
  #     bms_rx_timeout: '50ms'
  #     bms_password: "12345678"
  #     bms_supports_new_commands: 'true'

  # bms_6: !include
  #   # url: ${git_url}
  #   # refresh: 0s
  #   file: pvbrain2/bms/ant/device_antbms_old.yaml
  #   vars:
  #     bms_uart_id: uart_${uart_hub_bus}_6
  #     bms_name: 'antbms'
  #     bms_update_interval: '10s'
  #     bms_rx_timeout: '50ms'
  #     bms_password: "12345678"
  
  # bms_7: !include
  #   file: pvbrain2/bms/pylontech/device_pylontech.yaml
  #   vars:
  #     pylon_uart_id: uart_${uart_hub_bus}_4
  #     pylon_name: pylontech
  #     pylon_number: '1'             # Battery number queried
  #     pylon_update_interval: '5s'

  # bms_8: !include
  #   # url: ${git_url}
  #   # refresh: 0s
  #   file: pvbrain2/bms/pace/device_pacebms.yaml
  #   vars:
  #     bms_uart_id: uart_${uart_hub_bus}_4
  #     bms_name: 'pacebms'
  #     bms_modbus_address: '1'
  #     bms_update_interval: '1s'
  #     bms_template_update: '2s'
  #     bms_text_update: '5s'
  #     bms_modbus_send_wait_time: '200ms'
  #     bms_modbus_throttle: '200ms'

  # virtual_canbus_1: !include
  #   # url: ${git_url}
  #   # refresh: 0s
  #   file: pvbrain2/translation/jkbms2canbus/device_virtual_canbus.yaml
  #   vars:
  #     virtual_canbus_bus_id: 'can0_bus'
  #     virtual_canbus_can_id: '4'
  #     virtual_canbus_name: 'mcp2515'
  #     virtual_canbus_update_interval: '1s'
  #     virtual_canbus_template_update: '2s'
  #     virtual_canbus_text_update: '5s'

  #     virtual_canbus_charge_voltage_id: 
  #     virtual_canbus_charge_current_limit_id: 
  #     virtual_canbus_discharge_current_limit_id: 
  #     virtual_canbus_discharge_voltage_limit_id: 
  #     virtual_canbus_state_of_charge_id: 
  #     virtual_canbus_state_of_health_id:
  #     virtual_canbus_hires_state_of_charge_id: 
  #     virtual_canbus_battery_voltage_id:         
  #     virtual_canbus_battery_current_id: 
  #     virtual_canbus_battery_temperature_id: 
      
    ########################   Actions/Automations  ######################

  # ats_control_1: !include
  #   # url: ${git_url}
  #   # refresh: 0s
  #   file: pvbrain2/actions/ats_control/action_ats_control_offgrid_grid.yaml
  #   vars:
  #     ats_control_name: ats_control
  #     ats_control_id: 'ats_automatic_control_1'
  #     ats_control_voltage_id: 'smartshunt_battery_voltage_1'
  #     ats_control_relay_inverter_id: 'relay_inverter_1'
  #     ats_control_relay_ats_id: 'relay_ats_control_1'
  #     ats_control_solar_to_grid_voltage_threshold_id: 'ats_voltage_solar_to_grid_number_1'
  #     ats_control_grid_to_solar_voltage_threshold_id: 'ats_voltage_grid_to_solar_number_1'
  #     ats_control_delay_grid_to_solar: '13s'
  #     ats_control_delay_solar_to_grid: '2s'
  #     ats_control_grid_input: 'axpert_grid_input_1'
  #     ats_control_inverter_switch: 'axpert_switch_on_1'
  #     ats_control_grid: 'opto_grid_230V'
  #     ats_control_solar: 'opto_solar_230V'
  #     ats_control_inverteur_mode: "axpert_output_source_priority_select_1"
