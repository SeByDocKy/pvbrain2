substitutions:
  name: test_esp32
  baudrate: '9600'
  modbus_send_wait_time: '200ms'
  my_second: '59'
  my_minute: '59'
  my_hours: '23'
  
esphome:
  name: ${name}
esp32:
  board: esp32dev
  framework:
    type: esp-idf
    
# Enable logging
logger:
    baud_rate : 0
   

# Enable Home Assistant API
api:
 
ota:
  - platform: esphome

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password


  ap:
    ssid: "test_esp32"
    password: "xVNFwrutRmyc"


time:
  - platform: homeassistant
    id: my_time    

uart:
  id: uart_0
  tx_pin: GPIO16
  rx_pin: GPIO17
  baud_rate: ${baudrate}
  stop_bits: 1
   
modbus:
  send_wait_time: ${modbus_send_wait_time}
  id: modbus_0
  uart_id: uart_0    
    
i2c:
  sda: GPIO21
  scl: GPIO22 
  scan: True
  id: i2c_bus

packages:

  # inverter_1: !include
  #   file: pvbrain2/inverter/deye/device_deye.yaml         ### Pinout RJ45 DEYE: pin 1 (blanc-orange) <=> B-, pin 2  (orange) <=> A+
  #   vars:
  #     inverter_name: 'deye'
  #     inverter_modbus_id: 'modbus_0'
  #     inverter_modbus_address: '1'
  #     inverter_modbus_throttle: '200ms'
  #     inverter_update_interval: '2s'
  #     inverter_template_update: '2s'
  #     inverter_text_update: '5s'  
  
  inverter_2: !include                ###### bornier SOFAR TX- <=> B-, TX+ <=> B+
    # url: ${git_url}
    # refresh: 0s
    file: pvbrain2/inverter/sofar/device_sofar.yaml
    vars:
      inverter_name: 'sofar'
      inverter_modbus_id: 'modbus_0'
      inverter_modbus_address: '1'
      inverter_modbus_throttle: '200ms'
      inverter_modbus_offline_skip_updates: '10'
      inverter_update_interval: '3s'
      inverter_template_update: '3s'
      inverter_max_power: '3000'
      inverter_balance_loop_delay: '5s'

  # inverter_3: !include
  #   file: pvbrain2/inverter/voltronic/device_axpert_max.yaml   ### Pinout RJ45 voltronic : pin 1 (blanc-orange) <> TX, pin 2 (orange) <=> RX, pin 8 (marron) <=> GND
  #   vars:                                                      #### Convertisseur MAX3232, cf https://github.com/syssi/esphome-pipsolar
  #     inverter_uart_id: uart_0
  #     inverter_name: 'axpert'
  #     inverter_update_interval: '2s'
  #     inverter_template_update: '2s'
  #     inverter_text_update: '4s'    

  
